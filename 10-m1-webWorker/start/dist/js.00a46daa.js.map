{"version":3,"sources":["js/index.js"],"names":["lightTheme","document","querySelector","darkTheme","inputContent","outputContent","startBtn","addEventListener","body","classList","computeWorker","Worker","inputData","innerHTML","setAttribute","postMessage","data","type","result","time","message"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AACnD,MAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AACjD,MAAME,YAAY,GAAGH,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC;AACnE,MAAMG,aAAa,GAAGJ,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;AACrE,MAAMI,QAAQ,GAAGL,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AACjD;AACAF,UAAU,CAACO,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACzCN,QAAQ,CAACO,IAAI,CAACC,SAAS,GAAG,YAAY;AACxC,CAAC,CAAC;AAEFN,SAAS,CAACI,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACxCN,QAAQ,CAACO,IAAI,CAACC,SAAS,GAAG,WAAW;AACvC,CAAC,CAAC;;AAEF;AACA,IAAIC,aAAa,GAAG,IAAIC,MAAM,CAAC,sCAAW,CAAC;AAE3C,MAAMC,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAE1CN,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACvC;EACA;EACA;EACAF,aAAa,CAACQ,SAAS,GAAG,EAAE;EAC5BP,QAAQ,CAACQ,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;EACvCJ,aAAa,CAACK,WAAW,CAACH,SAAS,CAAC;AACtC,CAAC,CAAC;AAEFF,aAAa,CAACH,gBAAgB,CAAC,SAAS,EAAE,UAAU;EAAES;AAAK,CAAC,EAAE;EAC5D,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;IACxB,IAAI;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGH,IAAI,CAACI,OAAO;IACnCf,aAAa,CAACQ,SAAS,GAAI,OAAMK,MAAO,OAAMC,IAAK,UAAS;EAC9D;EAEA,IAAIH,IAAI,CAACC,IAAI,IAAI,MAAM,EAAE;IACvBX,QAAQ,CAACQ,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC;EAC1C;AACF,CAAC,CAAC","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["const lightTheme = document.querySelector(\"#light\");\nconst darkTheme = document.querySelector(\"#dark\");\nconst inputContent = document.querySelector(\".input-data .content\");\nconst outputContent = document.querySelector(\".output-data .content\");\nconst startBtn = document.querySelector(\"#start\");\n// Theme management\nlightTheme.addEventListener(\"click\", () => {\n  document.body.classList = \"light-body\";\n});\n\ndarkTheme.addEventListener(\"click\", () => {\n  document.body.classList = \"dark-body\";\n});\n\n// Worker Constructor\nlet computeWorker = new Worker(\"worker.js\");\n\nconst inputData = [56e7, 76e8, 62e7, 12e8];\n\nstartBtn.addEventListener(\"click\", () => {\n  // Promise.all(inputData.map((data) => computeTotal(data))).then((res) => {\n  //   res.forEach((e) => (outputContent.innerHTML += `<h4>${e}</h4>`));\n  // });\n  outputContent.innerHTML = \"\";\n  startBtn.setAttribute(\"disabled\", true);\n  computeWorker.postMessage(inputData);\n});\n\ncomputeWorker.addEventListener(\"message\", function ({ data }) {\n  if (data.type === \"data\") {\n    let { result, time } = data.message;\n    outputContent.innerHTML = `<h4>${result} | (${time}ms)</h4>`;\n  }\n\n  if (data.type == \"exit\") {\n    startBtn.setAttribute(\"disabled\", false);\n  }\n});\n"]}